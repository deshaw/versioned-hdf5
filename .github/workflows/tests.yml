name: Tests

on:
  push:
    branches: [master]
  pull_request:
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']
        numpy-version: ['latest']
        ndindex-version: ['latest']
        h5py-version: ['latest']
        include:
        - python-version: '3.9'
          numpy-version: '1.24.4'
          ndindex-version: '1.5.1'
          h5py-version: '3.8.0'
        - python-version: '3.12'  # numpy 1.26 has wheels up to Python 3.12
          numpy-version: '1.26'
          ndindex-version: 'latest'
          h5py-version: 'latest'
        - python-version: '3.13'
          numpy-version: 'latest'
          ndindex-version: 'latest'
          h5py-version: 'dev'

      fail-fast: false
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true # include tags to get correct version from setuptools_scm

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install native dependencies
        run: |
          sudo apt update -y
          sudo apt install -y hdf5-tools libhdf5-dev

      - name: Install target numpy version
        if: matrix.numpy-version != 'latest'
        run: pip install numpy~=${{ matrix.numpy-version }}

      - name: Install target ndindex version
        if: matrix.ndindex-version != 'latest'
        run: pip install ndindex~=${{ matrix.ndindex-version }}

      - name: Install latest h5py version
        if: matrix.h5py-version == 'latest'
        run: pip install h5py

      - name: Install target h5py version
        if: matrix.h5py-version != 'latest' && matrix.h5py-version != 'dev'
        run: pip install h5py~=${{ matrix.h5py-version }}

      - name: Install development h5py version
        if: matrix.h5py-version == 'dev'
        run: pip install git+https://github.com/h5py/h5py

      - name: Install versioned-hdf5
        run: pip install .

      - name: Install versioned-hdf5 test packages and extra h5py compression types
        run: |
          pip install .[test]
          pip install hdf5plugin tables

      - name: Dump pip environment
        run: pip list

      - name: Print hdf5 configuration
        run: |
          python -c 'import utils; utils.debug_libhdf5_so()'
          h5cc -showconfig

      - name: Run Tests
        run: pytest -v .
