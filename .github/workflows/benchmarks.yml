name: Benchmarks
on: [push, pull_request]
jobs:
  benchmarks:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -el {0}
    strategy:
      matrix:
        python-version: ['3.13']
        numpy-version: ['latest']
        ndindex-version: ['latest']
        hdf5-version: ['latest']
        h5py-version: ['latest']
        include:
        - python-version: '3.9'
          numpy-version: '1.24.4'
          ndindex-version: '1.5.1'
          hdf5-version: '1.12.2'
          h5py-version: '3.8.0'
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # get the non-merge commit for PRs
          fetch-tags: true # include tags to get correct version in setuptools_scm and asv

      - name: Generate environment.yml
        run: |
          echo """
            name: benchmarks
            channels:
              - conda-forge
            dependencies:
              - python=${{ matrix.python-version }}
              - numpy=${{ matrix.numpy-version }}
              - ndindex=${{ matrix.ndindex-version }}
              - hdf5=${{ matrix.hdf5-version }}
              - h5py=${{ matrix.h5py-version }}
              - asv
              - pip
          """ | sed 's/=latest//g' > environment.yml

          cat environment.yml

      - name: Setup Conda Environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          mamba-version: "*"
          activate-environment: benchmarks
          environment-file: environment.yml
          auto-activate-base: false

      - name: Install versioned-hdf5
        run: pip install .

      - name: Dump conda environment
        run: mamba env export

      - name: Setup asv
        run: |
          # Work around https://github.com/airspeed-velocity/asv/issues/1508
          sed -i "s/master/$(git rev-parse --abbrev-ref HEAD)/" asv.conf.json
          asv machine --yes

      - name: Run Benchmarks
        run: asv run --python=same --quick --set-commit-hash $(git rev-parse HEAD)

      - name: Upload asv results
        uses: actions/upload-artifact@v4
        with:
          name: asv-results-${{ matrix.python-version }}
          path: .asv/results
