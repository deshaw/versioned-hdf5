{"project": "versioned_hdf5", "project_url": "https://deshaw.github.io/versioned-hdf5/", "show_commit_url": "http://github.com/deshaw/versioned-hdf5/commit/", "hash_length": 8, "revision_to_hash": {"0": "971a6b8a85f7e0d0925c2449a75d01467e14d7e7", "1": "564fdf7b8376d01d0c194403efe657a2c8ea6c64", "2": "6735ad7bdac5c7a65fd0da46f92e0e13e8d60936", "3": "97671719d32bccc73383f985e5b0536687860ce4", "4": "952763b318b01f9ff493d2c3c7eaa6c3342f14c0", "5": "60e0a65fd177085c2729e0865a303d0d7ebc0790", "6": "9041260c5d50ad448d1b97f9f70dc58e3d05b638", "7": "8ea37193efadb0a22c04d55260ff20ccfe41fc21", "8": "627fe8067190fba588d4289dcc9fdbbc03ab98de", "9": "d054b18238ec3b1599d3195d1fb1700cb034b0b1", "10": "7c830ff20e4af75a5bb0e94bc88e4fefab5192db", "11": "239188ad3c252c18114a017e6cf5f1172bcb23eb", "12": "b4262483ce9c6f2c313022aed2604ecd6d508e14", "13": "26055a33c84c20771568efbc6e02e88ad8847251", "14": "26a1448b58532c536021ac1ffdfc22f9cfc28c92", "15": "56e260b3e5add6523c9b917074c610ead4d5b58d", "16": "61ec3f70ee29cb1bee7b3d8a5d81b0700b6e6728", "17": "518f9e01100a00af82bb3af91d1fa856c4639128", "18": "a46cfde0070e62c2ca544925f448f7f6ddc638bf", "19": "a5a0953e1b9e5e4435189d0da2ba5e1c5cf70c6a", "20": "27393c7af647d8c4bb8291d50e2899d10927c62b", "25": "09df22fb41b390dcb2fac090dbd08542046f578a", "26": "51b2843af7f31666db8966f691a33edac1460d14", "27": "501187964b7aff75094143caae2b19427d1bfa37", "28": "3dee8707b7ad82b718c6a5f375eb47042aab89ad", "29": "60783e8dada2d8e39e67c29fb87df160ca46b188", "30": "356cadeb887915e75b1793758fbb99ce93b45f03", "31": "0d3507993b93a7a30bf634d0af177d6a530b5ec2", "32": "cd8032ed2668f75917abe7b84f220aad0b3cb424", "33": "6d8cae130f5dae5d5753171696d647d3ce4c1321", "34": "2b9db3ac08bc3736f59889cb015d04d1abb646d2", "35": "59102a63b35adf534a3fd081a9fb0e502d298b95", "36": "87c9c479d375d4262ff899fa8fc5add968d966a9", "70": "06f518102f75917d8bd648808ae59f0e8df907fd", "71": "95a10b6fc1d7c73ed990cbdd135eb588f96f543c", "75": "f5cb738d5dc3be8cae8f91593e7e16b44d9df263", "76": "b826b9b7a23eb3b24e424257406f2636bdc8ac29", "77": "af4811fb9a3937dc045215a32f2021fe22ebd106", "78": "e95372717a9f7ecd6c9dcdeaa0b377c29b2fe778", "79": "dc7bcd2ff070c5067a1b1a232232d41eb94f1653", "80": "b5c2a137615ac62143334643b87045062261f42a", "81": "b17cada0c1b5bb71881845a68cd8b4ca88e6031d", "82": "2e404265844d680acaead473b09bbb93cc300674", "83": "76ea7b425417390415e38457b7afadd65f926eda", "84": "73eecd3aabb35cc57d5cff2851dae96eb54624e4", "85": "d8669a07f8df004fd3b803c870a7520d0eb5e80e", "86": "caf108f39d5e55223c11300c2ea1a6299945bf2c", "87": "fd7609b21d9de1b01c94774af910116025be6458", "88": "04d9b03800b833b5b8cac42ab57c0779ad9ee7b4", "89": "cd8dbfc2c1ea5a335d793b77661f9cbfd0931757", "90": "67289bd14ecbe05006dd5010897dc522f9ba16c6", "91": "b8c402140f4b81c080554361e0f703c687757668", "92": "171a80f000b472053e9a87883cf469adcac0d883", "93": "43aa4f31a3a5ffe7769ed2c5e433cc424687d5dc", "94": "c87c783154e6fb3075f721e3ec9d52915e0589fc", "95": "2c73ebf1f7b67bab34effe412b7c0c06567ebcd3", "96": "12fc48626bce1a068046b5bf73e76fe0e08dae46", "97": "27d5e960580be5f1d797bb397689d08cf7ff8bd7", "98": "afa29fdd471f46933ffbab171840abc5202f362e", "99": "3846df24220be976d3bbccdb1866ac098f8b9036", "100": "d09950b4321083a69ed9996bc3f2a6d21417b964", "103": "ab69e3cb3e18839aec8c6df0ecb9c7a7908804d2", "104": "48573735d1164807971779afe92d53f7fbe4b162", "105": "3f850f26375ba736da4f1beaa77cbfde5ce1a918", "106": "df13a3f0f757bd25e6cf0a25950b8b3f7d9bf90e", "107": "e91756f18f704bb3a8bb8e6cf3f11075158bb4e4", "108": "57c7f8667a7dc5c7529e99017c0fb4aea94cfc13", "109": "893bc4391a79c143b92f37b51f5d4529f572bbe5", "110": "2ba1d611af432da54a030c2769f2d7b7c37fa66a", "111": "74517d914779bcb63ddf2caf23a9091575120ec5", "112": "82294e1a6270327cb30c0fe782dbd29de82ec993", "113": "ad2ccdd2dfb983c8e74167ac2d1bc5d29e448835", "114": "0d456c409fed6d1a4a6ad77e3425644f6d592e44", "115": "e19873f83d2ef9de0c93db16b1ed3321b18a246a", "116": "0705e57bef08025a01db701a881688e2391a1f01", "117": "858dc64269449ff490b7bb8e4b40acbe82ec9db9", "118": "d7c819b8d8e4261a4ac12ff87d77cd00d9796144", "119": "596736f8d5d7d2a07c86f5e8df0ee7d237ce771b", "120": "887ca559a1e6e81d3522da37a0d6808808b49dff", "122": "e631ccc0a4ab4f27d1fbbabc5a8488b4e8543653", "125": "1db6a5861e2085fff7e6491d757cb54733f4bfc4", "127": "d4264ded760c83473a9fac4122eb5cb88d264879", "128": "34ecfdc94a02a7ecb2db10be15b00c12bbe252ef", "129": "0e5bbecc18b25afd8f7f8fc19197c14350e5dc41", "131": "b577ad15c1860f0d3ca00a5fa5581769357a33b7", "132": "f3a4e3bd0cd26063c7af36dcb7c31ec37697b20c", "133": "4e96ccf146a3fe28855ad129a854e6c91cad356c", "134": "5979a27374d66d35f1dd24940f9fafc282eb523c", "135": "d571732954c51dcf689086a3a604de2483e757c6", "136": "2ef1d07fcecf6fd765e03401fe3f9524a6c7bae6", "137": "032b71f7c29ef4a183caa4e6002917cf7573ad29", "138": "db5432092b3a0f682ce797ffd55c4c5008d824f1", "139": "ad12bd1cc11b27aa6388807f4be4fa2e589c4b03", "140": "53ad54d53acd90e9691b3889a06e5fe06169afe8", "141": "559b37347272dfa4e3272b04aeef3ac9d3242184", "142": "baf2d18ca0b264c282e5d1b50ecb18489fad5b5a", "143": "4df33bcc27d7a39d1b86a3588e2ce9bb3558163c", "144": "f328b19dba28fa23185ba791e8413978afbe5fb3", "145": "992210d9c4e076a25e2a4c0f638d35ae5d0324cd", "146": "f00f8e739b8359e0c2ff7084e8c8afd22aee4e7c", "148": "d49e2325379868a33d32937682d8131e28e2c87e", "149": "2d74aa04624930b7660e558993a111b94bf9b771", "150": "b180a529e9cbe3a2addef789526bc2cf647477d7", "151": "fd35f72ae8659d244134a2b6df07d61fea51f524", "152": "52bd8a0196569eb19ebe0fb911470dcb7a8391eb", "153": "81474bb86cac4d606417dc2e3f0f524f65198003", "154": "98fe106e9cfbec208d896062318e3041eef34c95", "155": "e03cc8a50d68eb383dd714cb5fee6bd36acd2755", "170": "379e75e14e6d2bbe150620c6cf0cb9b300ae1800", "173": "c91b7e6d50ff1544adbacf042f086a34eeb4a068", "180": "41dc8aa7c930eb279ce6c975d9f59a3f6e67e5e9", "181": "0223a79d2b25b06cc001b75f6b02d9448d3b2d44", "182": "cb641f71978ce868d5b1f0966e456c180ee19b3b", "202": "c096d618e1644893e20c02df2fbef92018c0a948", "205": "8071dbcfde439aeb9b2c603b8a3f33b48dc07589", "207": "633f7a761084eeceb9fd44338788487d047d9585", "212": "edd2b0a47fcda1b4c5c4766767b9105448e5cb4d", "219": "4c551883363098ede8db984fc8172e03d22a3102", "224": "8415603735c55f5bd68e7a262554212924a9377b", "231": "801bb321fe0b1b4185386d088257e5e16f9e60bc", "234": "ea26b47ccb9e94a76fbd1109b3164ed577fd0bef", "246": "495b6046eee2f79682084f584991d7bf8640a340", "254": "ea5f947435a54b1bcfe638cb01bb42875faf6f3d", "257": "0139fe64931a8a26bce357c8a2629dc26cde09a6", "264": "831f66858659ce099a3b5dfbe3d478d2a325517b", "266": "cdc24672aa7acc81537babf5d6440866c67a42b4", "271": "ccd6d3106fb2eab0cf6b1d4f3028e67f0942ba35", "273": "356882132f55f0246e1c5bf26b1cf831b95eda4f", "289": "c1b11a1516ef988278d5e82ec368f088288c5553", "291": "95eaa4f520bb3a0c0f5ba407c6641bf3bf54f4db", "294": "7b6620a4a9a10548cde3631dce14d94610f78132", "309": "ea903c13e4daffe503cec3895bb863660b8bd074", "310": "2fcf450d0a13c20d02f18dbd679ada4c361af971", "312": "70545fc581670b27236e33cb9e57811101fa4a24", "314": "f14b153e17d072f0eb6391563f2cbebe63953d02", "322": "fd58eedd5334eee27521cb8505f955c6c3c6619e", "323": "9d58f36b3c3ad50e6806a983d8ef3fca4517703b", "328": "7f8b9d111246fe7539009fbb17c2515c1bae11ca", "331": "7e9ec8edec922d1ef3a06f63ca89ea876a9727f6", "333": "8215ce670f75f319ade868d4da92911c151d39ef", "341": "2e73e5ce27dd765da42eb41dbd2c2d12c362649b", "343": "4dbcd4dfdc955470e9f5de545996ffd3e5d93aeb", "350": "2ee9c934b311bd0f35c5b64f4a59ed00d9dcde01", "354": "48184f19a756c051957afda8efac41c7ab5a99fe", "355": "48020951a94dab8fa083ec52e0489b4f6f35909b", "376": "5d51d20f2115dc070ace24a4c5cb221f9bc8b902", "421": "5eae76c28f23c986b1976ef3772ef83634897cda", "444": "fb7b6b0d468eb4d63f2d7c96258f5e1181a966c9", "446": "238df6112c27cb037f771f07a976f2d79126c2ed", "451": "8e50d97a7310e71ab61c0c27e15547df0b559678", "465": "39210a5e4cb6c199ec51eb9ed2d7f42ba8d6426f", "466": "8c8f1c0d677a944c9f4caab0a8af1c9bcfab4c35", "468": "f6826ca025cc9f633edc907c07312f41d55894c3", "492": "b3845565ada2fbe7fc14c0adcc95d3973b2c98b4", "502": "b8c3815c4c750e18a888a19e8f5947719ad58432", "504": "55c49434eaaa88ccfa9dfef03aba79c7943d5ef0", "506": "ef51a7b497a01e266855811d825dd637f8177b9d", "508": "9f418de275f3a8615ed3084e2be4ec9b3a0eccfe", "511": "d20a771cd14cad9d1321add09482a460b91afd4f", "512": "b623ed2a5b2ce4a63b6ef3a3fa9907d45815631c", "513": "1ab939aee8e3470ce793faa983ab0d7d946a1e61", "515": "f2981a4b20537f76917ee261a359f48ac11bd0d3", "518": "4ed5705577478408f741f2f66c4c139a31796f22", "521": "4c1c6ba9cd4822df37850b08379e3cea0277530f", "532": "677787160ee67fd908210fe5246085ea9aa3c1ed", "534": "930f3ab842d22a5b99769239692867345a4c616e", "542": "a7998c4ea5e2eaa3f95c086f0a807b34340072e7", "543": "518db6394a5cfb9b45ee465833d49b65106ed45c", "546": "1d602db735b25ec069a4800bdd5c891693a678ed", "550": "3dd66e0376d63fb37de2a670ddf432c9cd78384a", "555": "e4e0d4a850b6b96924ca6f4271f4b428922fb420", "557": "635244ca158f4c4a74bb38f0fd89e51f2b90b866", "560": "e8816dd57b0220dcc6621d2b1c052e52d74c665c", "562": "f63f6f63dd755c106b082ff5227cb4f83762132a", "574": "04f179997344b8c4f265143af4dc446e048b2495", "578": "a04d6e9a6cf4cf56429146c871f99bb9dd8c6388", "582": "ff1613eae8687f5f981bb35e87ca4aeb9e378ec4", "587": "03bd229aa2fdc5728990fca001b3ce829c839602", "599": "fcb7a30a1b9014c150956ad1a49177354ae5e9cd", "605": "d3136b463664fd09a294e607c4b3b023f675ce1c", "608": "c2b4c8aff7300cf5d93a3b2d234716db69dfe1ed", "612": "a59ab82a4d3a7efd254e3efbce7f99bf6ec8fea9", "614": "beefaa4aeef784fb09a7eadc43350d735970dd7f", "634": "09aa285a58f6668357ff15f2fe2675b1c3cb95e3", "640": "55bfe93f9eb7144867d27262d8d8556093aafc02", "643": "eeaf088bf04851a3c2a44663199c92a2cc4fd7b9", "646": "867a0e980403b155af852b5bda2f1ecd944f569f", "648": "6832581621fa4fb125899e4e72890d77e9821435", "649": "af9ba2313c73cf00c10f490407956ed3c0e6467e", "650": "7b74213e6920d301221ffd775d49d1f2e453ee59", "651": "8a8bd3a18091580c59c1d990343cfdbf76d21e91", "652": "2250e1e3eb8a8dd8e9f33e7ba7b6d5dbc8567fcc", "653": "9d645913cb48a2c23793d08f1f673a4706d3917f", "654": "f607f7329e706848ec3ed39d8899cca30dc7ac5a", "655": "42114ed76640c03accce96bc46b7c860756da40f", "656": "07c0af8c75576e55dec373ba0d2ee6d15c52c1cc", "657": "8dca33a354fa8d6a3f6723ff6bc1c3f0ce53b46f", "658": "5dcd069ddd55252dd1e36d5fa41e3ac2473b7ffd", "659": "3ad20d189f68b2af3f92b9e715110e1b9c49cf43", "660": "fab2c7291073f8ad74b35a7d096134d95a6abbfb", "661": "4d689a6dd5c6fd21950fcf0208e82876a8962a9d", "662": "af435c71863bc8b712a276249ed1d4ee7717b5ab", "663": "f0721f423c74ce3e2f3b4b8fd7ea09af7c81a7a9", "664": "f988e1538231e514b0a8142df18ec5c29ab31827", "665": "e5ce085485aa9862d68c36211c9e41a10527636f", "666": "00884fb2b678885e01b56fb2d67df87145a04b82", "667": "9653ba823c762f67708fa326a9fdbd416d1e98e8", "671": "f00c64b107e7c6e604cad64d746d7138b8469da0", "676": "13719716ed4d868f161d27c484fe24ff195212e2", "689": "8af148530ae2609d74eea43e303226baafa57a84", "692": "84af23d4022cc176f7bf0b11102116d93bb477ae", "694": "c9056d6498dba62e4d14efec1c30040e3723bac7", "696": "b161128447a0bbf64700f014e16ab383fd9ad427", "697": "844b548468439b524c27941245fef065590daaf0", "698": "b1a171d6f6d9629c7460faa627d061dcc6fb3538", "699": "d45a045b2bd7fab0263fd6cc97b4315404400925", "700": "54f9fa850b74044b883a2b9fe879f4656c82926b", "701": "7a159288f459246824f183d08c72a745b1177e88", "702": "d17f0e218afd5c702a289db717938ed2dd07d9f2", "703": "388230d03a07eb192602a9e4d63a9ccd236159d8", "704": "566d8a98646023d37088438e10583a1c255bb069", "705": "b43e8d821a5bb0fa2310740845f105233e284b59", "706": "e254f5e8b22555717d76ec0580e0e7c80228d88d", "707": "49000884734d78dad920808e1067b155b79ea9f2", "708": "5e1b9b13b381d19e5fa0699da8cf93bc38cf95d2", "709": "ade552d2593e914ac9b3c395772c029c8376c687", "710": "1ac03cee09aee01d959355b3c4773439f86912e0", "711": "38f686f0aaef45209d031ae5fc70fffcf413a02b", "712": "67025783ca6ad89bc34230d9e8faf328b82bab53", "714": "76780c589ae09a3475fabc4f9193d406a649d507", "715": "508b5d0718951483cf9119ddae317212694342a1", "716": "760cd3982507e39492ddecf8215db9c7f92fa888", "717": "350fef8bbac28c79d859acdc60cf833b1b067a4a", "718": "3f49f2613819d520057280a65ab3d962072dcb4e", "719": "4d53190421dff3941cd741a118c464a1bd25cbfa", "720": "d0a813f9ed087236a68672ef15aa460d2bbecd8e", "723": "89f937463f14711377dccb5a5ed974911a53a225", "726": "7b3a58c7b1f8b2cf3cea205463a08b30c5840769", "729": "7bee1b104a51cc5dac5aff65a27b081620c88f93", "733": "5cb8246041e54bfadf896714c0cd523526888940", "736": "a363d6464db124de46f968b4ab359fd3b1a8295b", "738": "f0b38297efd18f28f7d4d34a40bf7fbb63f92d8e", "743": "0acc45e93e5182a42a1a090a199bf1f39b8e3308", "749": "e509204da06fa4039e27a29df094e76681b606f7", "754": "3d0ee8b2dfbb825c532447c851172b491c0fab1a", "755": "f1c7086bee792ae37a8c2952e88d4cde9ae2c4e4", "757": "6d6cf43b9def3dd29d1fee7141aef6ae939ec3fb", "765": "d0c6dda17927711f187bfd8e5f45bed4ffd26774", "771": "b1072baebd64bc0c77e55fdf3d14c20ff5711551", "776": "1e929878ca1cd1d76948c1bf8325ca24fa6b9096", "778": "6eaa6be3b886beb3918eaf16756afac235ac2777", "781": "5c9d1acf8b3fc85d772974643e868a724b82e460", "786": "cfc499590d831716670026daabd8af73b06d52bf", "810": "04c25e9ddc12ebffca9e0c4e1b69ce8a0b2d9c84", "812": "59a353a93d7c68089d067d0f24a055d60c45422d", "813": "629b62d23274d695ef65b466ae0a14c6f055cb8b", "815": "9da9f43b512a7e4bed83f7ef866176bb3b23cf72", "818": "38d3bcdc23bafa48e360028b723895ee2602ac8e", "820": "6fda5c803346e9be1dff459080566863f71cdc78", "829": "c900a6053749aca8c89a352492c890577886e0c2", "834": "09f3a8f6cccdaa9d5eb28811139e4a327e519079", "841": "b85166942575c3ca62193fc4ecd5dc2745279dd8", "846": "edd9575e8804d31c9aa197c067e77e9fe940600a", "850": "6173f2cbaaac9ed09f6bd82311dbdaa7b673630c", "852": "6f6cfe45abbe9680d72035d8b228245a4d5f7aa2", "855": "ce16ec5f5d0696293677093f380198c2d8425ccd", "858": "9cc0e10e1d2ee42c7722eca760e90dacb5383d96", "862": "1bca9b5cc5a74ca90155a8af32757c6f420e012c", "864": "f51b3262c9199d36135b9068d3a379e27ddf21f3", "866": "8973b4e4d8988c35f6a7f931542856e36c98f88c", "872": "0bc978a8b51a1b794a994993634f49be67ed09e3", "873": "1b4dad8cac77b1ef163bc3ea4a3c269a88d65771", "875": "c828a717862998ecead15cf5e267eb396e9a02de", "878": "4215c06341f3c097b4a593da81f3dd32331f533d", "880": "6147e9e8dbb17f2ac37e9438059f8a9c8d895e6c", "883": "c5c661b920a2d38e440da4c5ff0a6148379d93d2", "884": "6b4aa459b74288d7fc18cc3fc9fc86f393c339a2", "885": "e2509ae1624bb60d72b56bc028c3328ce78eeadb", "886": "47f3510d698c573313048c2fcf3cd7c5be21895b", "887": "c881e08038395d65fedf131aa7b600857f7fe36f", "888": "84a746ac4f978e88fe72c77c339ff56e04b20ead", "889": "e17a4632b99ff4b2a74cabb24a7f8b55167ef038", "890": "335eb2af94c1d903723cfff831aa7312c8b3b1d0", "891": "ecc521312f190d6e522b921a431882c231498bf0", "892": "663be7cd99c55bcfac50c6b531205a9c164d7cd1", "893": "6ebf58d67863a49a8ed0612545462a0baf84886a", "894": "abec46b4394a57d09b476c006ba4df4af0f14043", "895": "61138024054baee31bd76f5d585a779f75f83f67", "896": "381a452be2fd7b93b3a22919f71ebd9ca4e50c25", "897": "116b22a7da76b43086d648060cc6867625b89717", "898": "e27c5de93c33310bba98eeb9b82a59caf92abeb4", "899": "b66a8592150779c40a10f934ffaae88bd2a5dd61", "900": "9714f9462f4d3e36bba99d802f5320ae3e452cb5", "901": "7013214e459238356ec69922605f23718808be81", "902": "e297235d3b15965943a524e2eceb8e9b09d41aa0", "903": "8e49fbd936ea3a4b1180efe629273eebf33502ee", "904": "ab05bc4b479a82874596663e244eca363dc5fc50", "905": "d4ef547031b438dc08eb405fbb125223950349b7", "906": "9f5e6643d86f969ec1663bcb7b7d2647ec211a0a", "907": "15b6e4a3b1f264e3d221bf0896aa96eda9d2d6b0", "908": "24cc0382ca5678571a5e50328d51941decd01bf6"}, "revision_to_date": {"0": 1574802822000, "1": 1574812408000, "2": 1574812611000, "3": 1575330085000, "4": 1575330383000, "5": 1575919686000, "6": 1575928809000, "7": 1575932095000, "8": 1575932420000, "9": 1575933014000, "10": 1575933059000, "11": 1575933241000, "12": 1575933381000, "13": 1575933516000, "14": 1575933527000, "15": 1575933670000, "16": 1575939309000, "17": 1576105560000, "18": 1576109777000, "19": 1576111502000, "20": 1576112671000, "25": 1576702068000, "26": 1576703409000, "27": 1576704114000, "28": 1576704300000, "29": 1576704327000, "30": 1576705716000, "31": 1576705766000, "32": 1576705785000, "33": 1576706340000, "34": 1576712718000, "35": 1576883170000, "36": 1578526417000, "70": 1579217625000, "71": 1579222598000, "75": 1579227817000, "76": 1579282034000, "77": 1579282327000, "78": 1579282465000, "79": 1579282495000, "80": 1579294894000, "81": 1579296243000, "82": 1579300312000, "83": 1579301101000, "84": 1579302610000, "85": 1579302649000, "86": 1579302681000, "87": 1579644098000, "88": 1579645319000, "89": 1579645325000, "90": 1579645346000, "91": 1579645354000, "92": 1579645369000, "93": 1579645493000, "94": 1579645679000, "95": 1579645716000, "96": 1579645871000, "97": 1579645932000, "98": 1579645989000, "99": 1579646159000, "100": 1579646336000, "103": 1579646671000, "104": 1579646787000, "105": 1579720535000, "106": 1579723932000, "107": 1579724115000, "108": 1579724399000, "109": 1579725047000, "110": 1579725060000, "111": 1579725374000, "112": 1579731914000, "113": 1579731957000, "114": 1579732013000, "115": 1579738706000, "116": 1579756612000, "117": 1579811060000, "118": 1580851680000, "119": 1580851690000, "120": 1580851797000, "122": 1581458554000, "125": 1581629062000, "127": 1581630478000, "128": 1581630686000, "129": 1582152830000, "131": 1582241558000, "132": 1582327671000, "133": 1582331419000, "134": 1582668765000, "135": 1582676880000, "136": 1582678646000, "137": 1582678678000, "138": 1582678701000, "139": 1582757275000, "140": 1582757306000, "141": 1582924656000, "142": 1582924676000, "143": 1582925195000, "144": 1582925432000, "145": 1582925452000, "146": 1582925635000, "148": 1582932600000, "149": 1583272651000, "150": 1583355017000, "151": 1583355053000, "152": 1583532664000, "153": 1583533668000, "154": 1583534730000, "155": 1583534778000, "170": 1584712465000, "173": 1584736284000, "180": 1585164743000, "181": 1585164754000, "182": 1585164768000, "202": 1585333242000, "205": 1585603658000, "207": 1585848257000, "212": 1585951595000, "219": 1586290064000, "224": 1586292175000, "231": 1586300395000, "234": 1586301982000, "246": 1586446436000, "254": 1587562688000, "257": 1587617577000, "264": 1587761399000, "266": 1587854895000, "271": 1588181587000, "273": 1588182339000, "289": 1588622806000, "291": 1588625581000, "294": 1588708309000, "309": 1589236862000, "310": 1589236897000, "312": 1589237534000, "314": 1589311188000, "322": 1589828106000, "323": 1589829568000, "328": 1590961843000, "331": 1591045333000, "333": 1591119770000, "341": 1591981871000, "343": 1591985960000, "350": 1592337056000, "354": 1592494533000, "355": 1592494567000, "376": 1593110187000, "421": 1594665651000, "444": 1595369970000, "446": 1595447154000, "451": 1595610700000, "465": 1595949615000, "466": 1595949637000, "468": 1595989832000, "492": 1596214632000, "502": 1596467225000, "504": 1596468539000, "506": 1596469049000, "508": 1596489733000, "511": 1596494225000, "512": 1596494912000, "513": 1596495434000, "515": 1596651602000, "518": 1596660358000, "521": 1597090646000, "532": 1597341968000, "534": 1598294558000, "542": 1599167337000, "543": 1599167406000, "546": 1599695663000, "550": 1599791989000, "555": 1599878503000, "557": 1600111075000, "560": 1600114395000, "562": 1600121297000, "574": 1600202604000, "578": 1600210155000, "582": 1601423598000, "587": 1602795861000, "599": 1604594466000, "605": 1605573104000, "608": 1605585100000, "612": 1605639377000, "614": 1605655074000, "634": 1607980068000, "640": 1609366786000, "643": 1609367073000, "646": 1609776056000, "648": 1609880952000, "649": 1609891072000, "650": 1610753005000, "651": 1610753724000, "652": 1610756114000, "653": 1610756206000, "654": 1611365320000, "655": 1611609836000, "656": 1611609851000, "657": 1611619198000, "658": 1611640921000, "659": 1611700815000, "660": 1611705255000, "661": 1611705965000, "662": 1611706216000, "663": 1612394818000, "664": 1612394978000, "665": 1612479499000, "666": 1612479569000, "667": 1612487365000, "671": 1612487945000, "676": 1612801072000, "689": 1614271070000, "692": 1614272738000, "694": 1614615902000, "696": 1614709441000, "697": 1615248462000, "698": 1615248511000, "699": 1615248524000, "700": 1615250004000, "701": 1616449249000, "702": 1616453392000, "703": 1616453404000, "704": 1616538279000, "705": 1616538290000, "706": 1616806377000, "707": 1617652752000, "708": 1617658007000, "709": 1617661117000, "710": 1617740760000, "711": 1617744540000, "712": 1617823305000, "714": 1617823909000, "715": 1617842054000, "716": 1617842083000, "717": 1617843000000, "718": 1617870964000, "719": 1617871097000, "720": 1617871164000, "723": 1617896173000, "726": 1617904394000, "729": 1617915420000, "733": 1618513558000, "736": 1618513765000, "738": 1618514962000, "743": 1618869802000, "749": 1618946593000, "754": 1618946922000, "755": 1618947138000, "757": 1618956626000, "765": 1619037596000, "771": 1619052961000, "776": 1619211201000, "778": 1619211645000, "781": 1619211945000, "786": 1619470847000, "810": 1620425602000, "812": 1620768063000, "813": 1620768126000, "815": 1621543435000, "818": 1621545199000, "820": 1621549367000, "829": 1624045554000, "834": 1624050051000, "841": 1626133064000, "846": 1627495058000, "850": 1627501881000, "852": 1627501904000, "855": 1627573143000, "858": 1627943287000, "862": 1628025288000, "864": 1628028113000, "866": 1632241275000, "872": 1632765191000, "873": 1632765352000, "875": 1632767573000, "878": 1633032769000, "880": 1633033359000, "883": 1634684164000, "884": 1634684235000, "885": 1639616774000, "886": 1639617316000, "887": 1639617338000, "888": 1639691342000, "889": 1639692829000, "890": 1641941783000, "891": 1641941801000, "892": 1641941815000, "893": 1641941957000, "894": 1641946254000, "895": 1641946302000, "896": 1641946327000, "897": 1641950140000, "898": 1641950165000, "899": 1641950189000, "900": 1641950207000, "901": 1641950214000, "902": 1641950234000, "903": 1641951423000, "904": 1641951434000, "905": 1641951448000, "906": 1642065267000, "907": 1642065275000, "908": 1642065293000}, "params": {"arch": ["x86_64"], "cpu": ["Intel(R) Core(TM) i7-4870HQ CPU @ 2.50GHz"], "machine": ["Aarons-Retina-MacBook-Pro.local"], "os": ["Darwin 18.6.0"], "ram": ["17179869184"], "python": ["3.8"], "branch": ["master", "performance2", "performance3", "new-delete"]}, "graph_param_list": [{"arch": "x86_64", "cpu": "Intel(R) Core(TM) i7-4870HQ CPU @ 2.50GHz", "machine": "Aarons-Retina-MacBook-Pro.local", "os": "Darwin 18.6.0", "ram": "17179869184", "python": "3.8", "branch": "master"}, {"arch": "x86_64", "cpu": "Intel(R) Core(TM) i7-4870HQ CPU @ 2.50GHz", "machine": "Aarons-Retina-MacBook-Pro.local", "os": "Darwin 18.6.0", "ram": "17179869184", "python": "3.8", "branch": "performance2"}, {"arch": "x86_64", "cpu": "Intel(R) Core(TM) i7-4870HQ CPU @ 2.50GHz", "machine": "Aarons-Retina-MacBook-Pro.local", "os": "Darwin 18.6.0", "ram": "17179869184", "python": "3.8", "branch": "performance3"}, {"arch": "x86_64", "cpu": "Intel(R) Core(TM) i7-4870HQ CPU @ 2.50GHz", "machine": "Aarons-Retina-MacBook-Pro.local", "os": "Darwin 18.6.0", "ram": "17179869184", "python": "3.8", "branch": "new-delete"}], "benchmarks": {"delete_versions.TimeDeleting.time_delete": {"code": "class TimeDeleting:\n    def time_delete(self, n):\n        tmp_name = tempfile.mktemp('.h5')\n        shutil.copy2(filename, tmp_name)\n        try:\n            # want to keep only every 10th version\n            versions_to_delete = []\n            with h5py.File(tmp_name, 'r') as f:\n                vf = VersionedHDF5File(f)\n                versions = sorted([(v, vf._versions[v].attrs['timestamp']) for v in vf._versions], key=lambda t: t[1])\n                for i, v in enumerate(versions):\n                    if i % 10 != 0:\n                        versions_to_delete.append(v[0])\n    \n            with h5py.File(tmp_name, 'r+') as f:\n                delete_versions(f, versions_to_delete)\n        finally:\n            os.remove(tmp_name)\n\n    def setup(self, n):\n        if not os.path.exists(filename):\n            with h5py.File(filename, 'w') as f:\n                vf = VersionedHDF5File(f)\n                with vf.stage_version('init') as sv:\n                    sv.create_dataset('values', shape=(0, 0), dtype='float', fillvalue=numpy.nan,\n                                      chunks=(22, 100), maxshape=(None, None), compression='lzf')\n    \n            # generate some test data with around 1000 versions\n            v = 1\n            with h5py.File(filename, 'r+') as f:\n                vf = VersionedHDF5File(f)\n                for d in range(22):\n                    with vf.stage_version(str(v)) as sv:\n                        values_ds = sv['values']\n                        values_ds.resize((values_ds.shape[0] + 1, values_ds.shape[1] + 5000))\n                        values_ds[-1, -5000] = numpy.random.rand()\n                        v += 1\n                    for c in range(n):\n                        with vf.stage_version(str(v)) as sv:\n                            values_ds = sv['values']\n                            idxs = numpy.random.choice(values_ds.shape[1], 50, replace=False)\n                            values_ds[-1, idxs] = numpy.random.rand(50)\n                            v += 1", "min_run_count": 2, "name": "delete_versions.TimeDeleting.time_delete", "number": 0, "param_names": ["param1"], "params": [["10", "30", "50"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 1000, "type": "time", "unit": "seconds", "version": "c2b5ff4b44e670bd2be890aa020216a8eb431694570b390e87104d317501b75e", "warmup_time": -1}, "hdf5.TimePureHDF5.time_getattr": {"code": "class TimePureHDF5:\n    def time_getattr(self):\n        dataset = self.file['data']\n        dataset[:, 0, 0:6]\n\n    def setup(self):\n        self.file = h5py.File('bench.hdf5', 'w')\n        self.file.create_dataset('data',\n                                 data=np.arange(10000).reshape((100, 10, 10)),\n                                 chunks=(3, 3, 3), maxshape=(None, None, None))", "min_run_count": 2, "name": "hdf5.TimePureHDF5.time_getattr", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "2e759d308432d2570cd8b41140c6171cbdac2f79c07f8cf323e54c6be0273446", "warmup_time": -1}, "hdf5.TimePureHDF5.time_resize_bigger": {"code": "class TimePureHDF5:\n    def time_resize_bigger(self):\n        dataset = self.file['data']\n        dataset.resize((100, 100, 100))\n\n    def setup(self):\n        self.file = h5py.File('bench.hdf5', 'w')\n        self.file.create_dataset('data',\n                                 data=np.arange(10000).reshape((100, 10, 10)),\n                                 chunks=(3, 3, 3), maxshape=(None, None, None))", "min_run_count": 2, "name": "hdf5.TimePureHDF5.time_resize_bigger", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "d0a22645103f056daa04af1d58f2abbcf7d4459232db9c22ddb408f1c0213792", "warmup_time": -1}, "hdf5.TimePureHDF5.time_resize_smaller": {"code": "class TimePureHDF5:\n    def time_resize_smaller(self):\n        dataset = self.file['data']\n        dataset.resize((10, 10, 10))\n\n    def setup(self):\n        self.file = h5py.File('bench.hdf5', 'w')\n        self.file.create_dataset('data',\n                                 data=np.arange(10000).reshape((100, 10, 10)),\n                                 chunks=(3, 3, 3), maxshape=(None, None, None))", "min_run_count": 2, "name": "hdf5.TimePureHDF5.time_resize_smaller", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "0ca62d1c3dee9f1b38e907e67525fcf5ae5e2ce489ea8f306231232ce1b83fb9", "warmup_time": -1}, "hdf5.TimePureHDF5.time_setattr": {"code": "class TimePureHDF5:\n    def time_setattr(self):\n        dataset = self.file['data']\n        dataset[:, 0, 0:6] = -1\n\n    def setup(self):\n        self.file = h5py.File('bench.hdf5', 'w')\n        self.file.create_dataset('data',\n                                 data=np.arange(10000).reshape((100, 10, 10)),\n                                 chunks=(3, 3, 3), maxshape=(None, None, None))", "min_run_count": 2, "name": "hdf5.TimePureHDF5.time_setattr", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "800ca98ef22079d63aebf10eb17e9f5771436b237fbf92b5d61adc551d84993c", "warmup_time": -1}, "inmemoryarraydataset.TimeInMemoryArrayDataset.time_getattr": {"code": "class TimeInMemoryArrayDataset:\n    def time_getattr(self):\n        with h5py.File('bench.hdf5', 'w') as f:\n            versioned_file = VersionedHDF5File(f)\n            with versioned_file.stage_version('version1') as g:\n                dataset = g.create_dataset('data',\n                                           data=np.arange(10000).reshape((100, 10, 10)),\n                                           chunks=(3, 3, 3))\n                assert isinstance(dataset, InMemoryArrayDataset) or isinstance(dataset, DatasetWrapper) and isinstance(dataset.dataset, InMemoryArrayDataset)\n                dataset[:, 0, 0:6]", "min_run_count": 2, "name": "inmemoryarraydataset.TimeInMemoryArrayDataset.time_getattr", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 1000, "type": "time", "unit": "seconds", "version": "03bc703ccc7f5109bd09fb364d994f8b407dd1c5ef0688fecbfb98bd31f401d7", "warmup_time": -1}, "inmemoryarraydataset.TimeInMemoryArrayDataset.time_resize_bigger": {"code": "class TimeInMemoryArrayDataset:\n    def time_resize_bigger(self):\n        with h5py.File('bench.hdf5', 'w') as f:\n            versioned_file = VersionedHDF5File(f)\n            with versioned_file.stage_version('version1') as g:\n                dataset = g.create_dataset('data',\n                                           data=np.arange(10000).reshape((100, 10, 10)),\n                                           chunks=(3, 3, 3))\n                assert isinstance(dataset, InMemoryArrayDataset) or isinstance(dataset, DatasetWrapper) and isinstance(dataset.dataset, InMemoryArrayDataset)\n                dataset.resize((100, 100, 100))", "min_run_count": 2, "name": "inmemoryarraydataset.TimeInMemoryArrayDataset.time_resize_bigger", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 1000, "type": "time", "unit": "seconds", "version": "fdc09f867950d3ea63ce715311e8204e45a055959d732b4ac531a9afbc5054eb", "warmup_time": -1}, "inmemoryarraydataset.TimeInMemoryArrayDataset.time_resize_smaller": {"code": "class TimeInMemoryArrayDataset:\n    def time_resize_smaller(self):\n        with h5py.File('bench.hdf5', 'w') as f:\n            versioned_file = VersionedHDF5File(f)\n            with versioned_file.stage_version('version1') as g:\n                dataset = g.create_dataset('data',\n                                           data=np.arange(10000).reshape((100, 10, 10)),\n                                           chunks=(3, 3, 3))\n                assert isinstance(dataset, InMemoryArrayDataset) or isinstance(dataset, DatasetWrapper) and isinstance(dataset.dataset, InMemoryArrayDataset)\n                dataset.resize((10, 10, 10))", "min_run_count": 2, "name": "inmemoryarraydataset.TimeInMemoryArrayDataset.time_resize_smaller", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 1000, "type": "time", "unit": "seconds", "version": "082fed10fc0ef1f09ef29258cfc6d044727ca67460b78944ced94a1b40d065ef", "warmup_time": -1}, "inmemoryarraydataset.TimeInMemoryArrayDataset.time_setattr": {"code": "class TimeInMemoryArrayDataset:\n    def time_setattr(self):\n        with h5py.File('bench.hdf5', 'w') as f:\n            versioned_file = VersionedHDF5File(f)\n            with versioned_file.stage_version('version1') as g:\n                dataset = g.create_dataset('data',\n                                           data=np.arange(10000).reshape((100, 10, 10)),\n                                           chunks=(3, 3, 3))\n                assert isinstance(dataset, InMemoryArrayDataset) or isinstance(dataset, DatasetWrapper) and isinstance(dataset.dataset, InMemoryArrayDataset)\n                dataset[:, 0, 0:6] = -1", "min_run_count": 2, "name": "inmemoryarraydataset.TimeInMemoryArrayDataset.time_setattr", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 1000, "type": "time", "unit": "seconds", "version": "a6f9aa34a9a23e90a219560b66ec33cd105e73f8004bfe43c54bb75805269541", "warmup_time": -1}, "inmemorydataset.TimeInMemoryDataset.time_getitem": {"code": "class TimeInMemoryDataset:\n    def time_getitem(self):\n        dataset = self.versioned_file['version1']['data']\n        assert isinstance(dataset, InMemoryDataset) or isinstance(dataset, DatasetWrapper) and isinstance(dataset.dataset, InMemoryDataset)\n        dataset[:, 0, 0:6]\n\n    def setup(self):\n        if hasattr(self, 'file'):\n            self.file.close()\n        if os.path.exists('bench.hdf5'):\n            os.remove('bench.hdf5')\n    \n        with h5py.File('bench.hdf5', 'w') as f:\n            versioned_file = VersionedHDF5File(f)\n    \n            with versioned_file.stage_version('version1') as g:\n                g.create_dataset('data',\n                                 data=np.arange(10000).reshape((100, 10, 10)),\n                                 chunks=(3, 3, 3))\n    \n        self.file = h5py.File('bench.hdf5', 'a')\n        self.versioned_file = VersionedHDF5File(self.file)", "min_run_count": 2, "name": "inmemorydataset.TimeInMemoryDataset.time_getitem", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 1000, "type": "time", "unit": "seconds", "version": "3d9054259fd156ce88e37d3c08f3952b7ea524394ba8b0fb2e5ba9af2f618f69", "warmup_time": -1}, "inmemorydataset.TimeInMemoryDataset.time_resize_bigger": {"code": "class TimeInMemoryDataset:\n    def time_resize_bigger(self):\n        # https://github.com/airspeed-velocity/asv/issues/966\n        self.setup()\n        with self.versioned_file.stage_version('version2') as g:\n            dataset = g['data']\n            assert isinstance(dataset, InMemoryDataset) or isinstance(dataset, DatasetWrapper) and isinstance(dataset.dataset, InMemoryDataset)\n            dataset.resize((100, 100, 100))\n\n    def setup(self):\n        if hasattr(self, 'file'):\n            self.file.close()\n        if os.path.exists('bench.hdf5'):\n            os.remove('bench.hdf5')\n    \n        with h5py.File('bench.hdf5', 'w') as f:\n            versioned_file = VersionedHDF5File(f)\n    \n            with versioned_file.stage_version('version1') as g:\n                g.create_dataset('data',\n                                 data=np.arange(10000).reshape((100, 10, 10)),\n                                 chunks=(3, 3, 3))\n    \n        self.file = h5py.File('bench.hdf5', 'a')\n        self.versioned_file = VersionedHDF5File(self.file)", "min_run_count": 2, "name": "inmemorydataset.TimeInMemoryDataset.time_resize_bigger", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 1000, "type": "time", "unit": "seconds", "version": "b778cca65c85402b72c0220afe38e2598e8a2d08d09a6c4e37562b8880752851", "warmup_time": -1}, "inmemorydataset.TimeInMemoryDataset.time_resize_smaller": {"code": "class TimeInMemoryDataset:\n    def time_resize_smaller(self):\n        # https://github.com/airspeed-velocity/asv/issues/966\n        self.setup()\n        with self.versioned_file.stage_version('version2') as g:\n            dataset = g['data']\n            assert isinstance(dataset, InMemoryDataset) or isinstance(dataset, DatasetWrapper) and isinstance(dataset.dataset, InMemoryDataset)\n            dataset.resize((10, 10, 10))\n\n    def setup(self):\n        if hasattr(self, 'file'):\n            self.file.close()\n        if os.path.exists('bench.hdf5'):\n            os.remove('bench.hdf5')\n    \n        with h5py.File('bench.hdf5', 'w') as f:\n            versioned_file = VersionedHDF5File(f)\n    \n            with versioned_file.stage_version('version1') as g:\n                g.create_dataset('data',\n                                 data=np.arange(10000).reshape((100, 10, 10)),\n                                 chunks=(3, 3, 3))\n    \n        self.file = h5py.File('bench.hdf5', 'a')\n        self.versioned_file = VersionedHDF5File(self.file)", "min_run_count": 2, "name": "inmemorydataset.TimeInMemoryDataset.time_resize_smaller", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 1000, "type": "time", "unit": "seconds", "version": "c9c051c4af010816abc469883320dc647f7ac6acd0ed78f11f314c0dacf65e1c", "warmup_time": -1}, "inmemorydataset.TimeInMemoryDataset.time_setitem": {"code": "class TimeInMemoryDataset:\n    def time_setitem(self):\n        # https://github.com/airspeed-velocity/asv/issues/966\n        self.setup()\n        with self.versioned_file.stage_version('version2') as g:\n            dataset = g['data']\n            assert isinstance(dataset, InMemoryDataset) or isinstance(dataset, DatasetWrapper) and isinstance(dataset.dataset, InMemoryDataset)\n            dataset[:, 0, 0:6] = -1\n\n    def setup(self):\n        if hasattr(self, 'file'):\n            self.file.close()\n        if os.path.exists('bench.hdf5'):\n            os.remove('bench.hdf5')\n    \n        with h5py.File('bench.hdf5', 'w') as f:\n            versioned_file = VersionedHDF5File(f)\n    \n            with versioned_file.stage_version('version1') as g:\n                g.create_dataset('data',\n                                 data=np.arange(10000).reshape((100, 10, 10)),\n                                 chunks=(3, 3, 3))\n    \n        self.file = h5py.File('bench.hdf5', 'a')\n        self.versioned_file = VersionedHDF5File(self.file)", "min_run_count": 2, "name": "inmemorydataset.TimeInMemoryDataset.time_setitem", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 1000, "type": "time", "unit": "seconds", "version": "e96199385d96cb13ddb7a257ded590b70a1b7a1fd1523460f2131e94d10b9f5c", "warmup_time": -1}, "many_chunks.time_many_chunks": {"code": "def time_many_chunks():\n    d0 = 2\n    d1 = 15220\n    d2 = 2\n    shape = (d0, d1, d2)\n    chunks = (600, 2, 4)\n    with h5py.File('foo.h5', 'w') as f:\n        vf = VersionedHDF5File(f)\n        with vf.stage_version('0') as sv:\n            sv.create_dataset('bar', shape=shape, maxshape=(None, None, None),\n                              chunks=chunks, dtype=dt,\n                              data=np.full(shape, 0, dtype=dt))\n\n    i = 1\n    with h5py.File('foo.h5', 'r+') as f:\n        vf = VersionedHDF5File(f)\n        with vf.stage_version(str(i)) as sv:\n            sv['bar'][:] = np.full(shape, i, dtype=dt)", "min_run_count": 2, "name": "many_chunks.time_many_chunks", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "cabb39a1324ee887948aaa0a43500922a2b54721821fefdec9eaff931456a27e", "warmup_time": -1}, "many_chunks.time_many_chunks_arange": {"code": "def time_many_chunks_arange():\n    d0 = 2\n    d1 = 15220\n    d2 = 2\n    shape = (d0, d1, d2)\n    chunks = (600, 2, 4)\n    with h5py.File('foo.h5', 'w') as f:\n        vf = VersionedHDF5File(f)\n        with vf.stage_version('0') as sv:\n            sv.create_dataset('bar', shape=shape, maxshape=(None, None, None),\n                              chunks=chunks, dtype=dt,\n                              data=np.arange(np.prod(shape), dtype=dt).reshape(shape))", "min_run_count": 2, "name": "many_chunks.time_many_chunks_arange", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "f2c60d70cd09f267a90204fcc7f961f9ea05b68d268e4e2e56d64a6dac3296e6", "warmup_time": -1}, "many_chunks.time_many_chunks_integer_index": {"code": "def time_many_chunks_integer_index():\n    d0 = 2\n    d1 = 15220\n    d2 = 2\n    shape = (d0, d1, d2)\n    chunks = (600, 2, 4)\n    with h5py.File('foo.h5', 'w') as f:\n        vf = VersionedHDF5File(f)\n        with vf.stage_version('0') as sv:\n            sv.create_dataset('bar', shape=shape, maxshape=(None, None, None),\n                              chunks=chunks, dtype=dt,\n                              data=np.full(shape, 0, dtype=dt))\n\n    i = 1\n    with h5py.File('foo.h5', 'r+') as f:\n        vf = VersionedHDF5File(f)\n        with vf.stage_version(str(i)) as sv:\n            i2 = np.random.choice(d1, 30, replace=False)\n            i2 = np.sort(i2)\n            sv['bar'][:, i2, :] = np.full((d0, len(i2), d2), i, dtype=dt)", "min_run_count": 2, "name": "many_chunks.time_many_chunks_integer_index", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "8c51f263d02dccf5bd0bcab3038302a963240197a7e8d4db7a1ff450b7a51fc4", "warmup_time": -1}, "resize.time_resize": {"code": "def time_resize():\n    with h5py.File('foo.h5', 'w') as f:\n        vf = VersionedHDF5File(f)\n        with vf.stage_version('0') as sv:\n            sv.create_dataset('bar', (2, 15220, 2),\n                              chunks=(300, 100, 2),\n                              dtype=dt, data=np.full((2, 15220, 2), 0, dtype=dt))\n\n    with h5py.File('foo.h5', 'r+') as f:\n        vf = VersionedHDF5File(f)\n        with vf.stage_version('1') as sv:\n            bar = sv['bar']\n            bar.resize((3, 15222, 2))", "min_run_count": 2, "name": "resize.time_resize", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 1200, "type": "time", "unit": "seconds", "version": "139acbc7aac740ddd5fc4148856dd9091cd651897ae668a8777a3192b67cdedf", "warmup_time": -1}, "resize.time_resize_and_write": {"code": "def time_resize_and_write():\n    with h5py.File('foo.h5', 'w') as f:\n        vf = VersionedHDF5File(f)\n        with vf.stage_version('0') as sv:\n            sv.create_dataset('bar', (1, 10, 2),\n                              chunks=(600, 2, 4),\n                              dtype=dt, data=np.full((1, 10, 2), 0, dtype=dt))\n\n    for i in range(1, 100):\n        with h5py.File('foo.h5', 'r+') as f:\n            vf = VersionedHDF5File(f)\n            with vf.stage_version(str(i)) as sv:\n                bar = sv['bar']\n                bar.resize((1, (i+1) * 10, 2))\n                bar[:, -10:, :] = np.full((1, 10, 2), i, dtype=dt)", "min_run_count": 2, "name": "resize.time_resize_and_write", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 1200, "type": "time", "unit": "seconds", "version": "b4b4259cb46ee209f997c5832896749d06178290828afc8d7beb0874e813b44c", "warmup_time": -1}, "resize.time_resize_and_write_hdf5": {"code": "def time_resize_and_write_hdf5():\n    with h5py.File('foo.h5', 'w') as f:\n        f.create_dataset('bar0', (1, 10, 2),\n                         chunks=(600, 2, 4),\n                         dtype=dt, data=np.full((1, 10, 2), 0, dtype=dt),\n                         maxshape=(None, None, None))\n\n    for i in range(1, 100):\n        with h5py.File('foo.h5', 'r+') as f:\n            bar = f.create_dataset('bar%d' % i, chunks=(600, 2, 4), dtype=dt,\n                                   data=f['bar%d' % (i-1)],\n                                   maxshape=(None, None, None))\n            bar.resize((1, (i+1) * 10, 2))\n            bar[:, -10:, :] = np.full((1, 10, 2), i, dtype=dt)", "min_run_count": 2, "name": "resize.time_resize_and_write_hdf5", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "a4386c79036bab0a0fd626cd38ad9871c13d9504cf70b4791c1b45c8ac2c2dcb", "warmup_time": -1}, "resize.time_resize_and_write_hdf5_no_copy": {"code": "def time_resize_and_write_hdf5_no_copy():\n    with h5py.File('foo.h5', 'w') as f:\n        f.create_dataset('bar', (1, 10, 2),\n                         chunks=(600, 2, 4),\n                         dtype=dt, data=np.full((1, 10, 2), 0, dtype=dt),\n                         maxshape=(None, None, None))\n\n    for i in range(1, 100):\n        with h5py.File('foo.h5', 'r+') as f:\n            bar = f['bar']\n            bar.resize((1, (i+1) * 10, 2))\n            bar[:, -10:, :] = np.full((1, 10, 2), i, dtype=dt)", "min_run_count": 2, "name": "resize.time_resize_and_write_hdf5_no_copy", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "f94f592d285299e8c5c7a2fbfb86b129371e9d58c71d13f55f14a6176fc66808", "warmup_time": -1}, "resize.time_resize_hdf5": {"code": "def time_resize_hdf5():\n    with h5py.File('foo.h5', 'w') as f:\n        f.create_dataset('bar', (2, 15220, 2),\n                              chunks=(300, 100, 2),\n                              dtype=dt, data=np.full((2, 15220, 2), 0,\n                                                     dtype=dt),\n                         maxshape=(None, None, None))\n\n    with h5py.File('foo.h5', 'r+') as f:\n        bar = f['bar']\n        bar.resize((3, 15222, 2))", "min_run_count": 2, "name": "resize.time_resize_hdf5", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "4e9ed3924a20c3eb88bff7199efce32a2f66cf82247e481040b00f67b6e21ed9", "warmup_time": -1}, "versionedhdf5file.TimeDatetimeAccess.time_version_by_datetime": {"code": "class TimeDatetimeAccess:\n    def time_version_by_datetime(self):\n        # Based on https://github.com/deshaw/versioned-hdf5/issues/170\n        with h5py.File('foo.h5', 'r') as f:\n            vf = VersionedHDF5File(f)\n            for _ in range(100):\n                _ = vf[self.dt]['bar'][:]\n\n    def setup(self):\n        with h5py.File('foo.h5', 'w') as f:\n            vf = VersionedHDF5File(f)\n            with vf.stage_version('0') as sv:\n                sv.create_dataset('bar', data=np.random.rand(10))\n    \n            for i in range(1, 100):\n                with vf.stage_version(str(i)) as sv:\n                    sv['bar'][:] = np.random.rand(10)\n            self.dt = np.datetime64(vf[str(50)].attrs['timestamp'])", "min_run_count": 2, "name": "versionedhdf5file.TimeDatetimeAccess.time_version_by_datetime", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "68650944530784b3fda1ba4817d8e831fda665cd7ff0a32c4e20e92aaac32816", "warmup_time": -1}}, "machines": {"Aarons-Retina-MacBook-Pro.local": {"arch": "x86_64", "cpu": "Intel(R) Core(TM) i7-4870HQ CPU @ 2.50GHz", "machine": "Aarons-Retina-MacBook-Pro.local", "os": "Darwin 18.6.0", "ram": "17179869184", "version": 1}}, "tags": {"1.0": 512, "1.1": 574, "1.2": 612, "1.2.1": 643, "1.2.2": 671, "1.2.3": 692, "1.2.4": 720, "1.2.5": 736, "1.2.6": 754, "1.3": 810, "1.3.1": 818, "1.3.2": 852, "1.3.3": 862, "1.3.4": 873, "1.3.5": 878, "1.3.6": 884, "v1.0": 512}, "pages": [["", "Grid view", "Display as a agrid"], ["summarylist", "List view", "Display as a list"], ["regressions", "Show regressions", "Display information about recent regressions"]]}